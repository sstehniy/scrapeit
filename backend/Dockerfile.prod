# Use an official Go runtime as a parent image
FROM golang:1.22-alpine

# Set the Current Working Directory inside the container
WORKDIR /app

# Install necessary dependencies
RUN apk update && apk add --no-cache git bash curl

# Copy go.mod and go.sum files first to leverage Docker cache
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source code into the container
COPY . .

# Copy and install wait-for-it script
COPY wait-for-it.sh /bin/wait-for-it.sh
RUN chmod +x /bin/wait-for-it.sh

# Build the Go app
RUN go build -o main ./cmd

# Expose port 3457 to the outside world
EXPOSE 3457

# Set environment variables
ARG CHROMIUM_PORT
ARG CHROMIUM_DOMAIN
ENV CHROMIUM_PORT=${CHROMIUM_PORT}
ENV CHROMIUM_DOMAIN=${CHROMIUM_DOMAIN}

# Command to wait for dependencies and then run the executable
CMD wait-for-it.sh ${CHROMIUM_DOMAIN} ${CHROMIUM_PORT} -- ./main
